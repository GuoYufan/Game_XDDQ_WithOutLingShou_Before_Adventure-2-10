import os,sys

here=__file__
for _ in range(1):
    here=os.path.dirname(here)
sys.path.append(
os.sep.join((here,"modules"))
)
del os,sys

import math
from Role import Role
from Fight import Fight
from 对手模板 import *
from 转换器about灵兽信息 import Convert
from 穿换任意两件来计算基值 import Beast, Equip


def 找到面板基值(attr):
    temp=dict(zip("血攻防",range(3)))
    #面板_鸾鸟=(19469,3004,479)
    #面板_天马=(18176,2809,446)
    
    #面板_鸾鸟=(20962,3205,514)
    #面板_天马=(19570,2996,479)
    
    #先=Beast("鸾鸟",0.17)    
    #后=Beast("天马",0.09)
    
    面板_鸾鸟=(22968,3502,570)
    面板_天马=(21058,3217,522)
    
    先=Beast("鸾鸟",0.192)    
    后=Beast("天马",0.09)
    equip=Equip((先, 后))


    先.be_worn(面板_鸾鸟[temp[attr]])
    后.be_worn(面板_天马[temp[attr]])
    equip.to_be_taken_off()
    
    return equip.基值, equip.剩余全部属性提升_先
    
    
# 我.灵兽.下阵()
# 我.灵兽.上阵()
def 下阵灵兽(我, 可选主灵兽, 改属性提升吗):
    if not 我.主灵兽名称:return 
    if 改属性提升吗:
        收集 = []
        for attr in "血攻防":
            收集.append(找到面板基值(attr))
        input(f"{收集}\n😋\n")
        
        面板 = 我.获取基本属性()[:-1]
        新面板 = []        
        improve = 可选主灵兽["属性提升"][我.主灵兽名称]
        for i in range(3):
            该项基础属性的基值 = 收集[i][0]
            削弱值 = 该项基础属性的基值 * improve
            新面板.append( 面板[i] - 削弱值 )
       
        我.血, 我.攻, 我.防 = 新面板
        #input(新面板)
    我.主灵兽名称=""

    
def 上阵灵兽(我, 可选主灵兽, 改属性提升吗):
    if not 我.主灵兽名称:return 
    if 改属性提升吗:
        收集 = []
        for attr in "血攻防":
            收集.append(找到面板基值(attr))
        
        面板 = 我.获取基本属性()[:-1]
        新面板 = []
        improve = 可选主灵兽["属性提升"][我.主灵兽名称]
        for i in range(3):
            该项基础属性的基值 = 收集[i][0]
            加强值 = 该项基础属性的基值 * improve
            新面板.append( 面板[i] + 加强值 )
   
        我.血, 我.攻, 我.防 = 新面板
        #input(新面板)

    我.主灵兽出手频率=可选主灵兽["出手频率"][我.主灵兽名称]
    try:
        我.主灵兽伤倍率_乘在攻=可选主灵兽["伤倍率_乘在攻"][我.主灵兽名称]
    except KeyError:pass
    try: 
        我.主灵兽治疗倍率_乘在攻=可选主灵兽["治疗倍率_乘在攻"][我.主灵兽名称]
    except KeyError:pass
    


def 使所有灵兽升级到消耗相同灵果(level, name,可选主灵兽, only_first_one=False):    
    convert=Convert(level, name)
    可选主灵兽=convert.copy(可选主灵兽)
    
    #convert.show()
    
    if only_first_one:return 可选主灵兽
    
    其他所有灵兽=[pending_name for pending_name in 可选主灵兽["属性提升"] if not pending_name==name]
    其他所有灵兽对应等级库=dict()
    
    for targer_name in 其他所有灵兽:
        convert.设置要转换到的灵兽叫什么名称(targer_name)
        其他所有灵兽对应等级库[targer_name]=int(convert.获取等级(targer_name))
       
    for pending_name,pending_level in 其他所有灵兽对应等级库.items():
        convert.__init__(pending_level, pending_name)
        #convert.show()
        #input()
        可选主灵兽=convert.copy(可选主灵兽)
    
    #input(可选主灵兽)
    return 可选主灵兽


#--- 入口 ---

def run():
    我=Role([22968,3502,570,784],"我")
    敌=Role([63298,2745,913,946],"敌")
    我.主灵兽名称=("鸾鸟","天马")[0]   
    战场=Fight(我,敌)       
    我.现阶段=我.对手.现阶段="金丹"
    
    def 双方信息设置(对手类型="冒险怪"):
        nonlocal 我
        if 对手类型=="冒险怪":           
            我.对手.设置战斗抗性(7.1,"抗连",19.3)
            我.对手.设置战斗属性(3.4,"连",10.2)
        elif 对手类型=="斗法":
            '''           
            [我金丹前期,41级,5w4妖力|敌金丹后期,54级,6w4妖力]
            我=Role([22930,3497,569,784],"我")
            我.对手.设置基础属性(27110,4058,688,925)
连暴反13%对吸3%+无连暴反。
伤10.4%对15.22%。10回合对7回合。
我鸟治疗14.95%。敌灵狐伤13.5%（没算强灵13.45%）。

            
无连暴反情况下，鸾鸟拖到9回合。人物行动8回合。
8回合我只能压敌血线到80.68%。
还差两次攻击机会。
只有8回合连暴反2次才有机会赢。
他带了精怪黑麒麟，把我连暴各-28%。
我只剩反。
无黑麒麟，我胜率96%。
有黑麒麟，这时我没有暴击了，我连击率3.5%忽略不计。
我只剩反击率21%，
这时我胜率60%，赢需要反击2~3次。
但打500场还是有135次连击。
135/500/8=3.375%连击率。跟3.5%连击率差不多。确实有。


把梼杌换魔礼青。
假设魔礼青是从一开始+40%反（虽然做不到）。
我有89%胜率。
8回合反击了2次赢。
2/8=2需要25%连暴反率。
我有41.6%反击率。

现在魔礼青已经不再只能从一开始+了。
而是可以只在受击时加10%，而且这一场叠满了+50%，下一场也可以刷新从+10%开始。
这时胜率仍然有85%~91%。
500场1400+次反击，0次连击。
8回合反击4次赢。

现在改过来之后。
梼杌是（面板3.5%连击率，21.6%反击率，共25.1%连暴反率）：60%胜率，8回合行动，无连暴反压血线到80.84%。
赢需要8回合连暴反2次，出现在第2场。2/8=需要25%连暴反率。理想胜率=50%。
800/500/8=反击率20%左右。
140/500/8=连击率3.5%左右。

魔礼青是（面板1.6%反击率）：87.8193%~88%胜率，8回合行动，无连暴反压血线到80.84%。
赢需要8回合连暴反2次，出现在第1场。2/8=需要25%连暴反率。理想胜率=100%。
500场1400+次反击，0次连击。
1400/500/8=反击率34%左右，跟预想差不多（把50%预想成开场40%）。
还是魔礼青好。
因为8回合算的是总连暴反率。
梼杌只有开场固定到本场结束的23.5%。
而魔礼青平均到8回合有34%。


3/8漏一次：减40%胜率
漏2次：减(38%-25%=)13%胜率

【最终实战结果】
一场就赢了。
8回合反击2次（也就是漏了1次，漏的会在之后补）。
最后一回合第8回合后手人物行动胜。

            '''       
            我.对手.设置战斗抗性(13,"抗连",14.3)
            我.对手.吸=21.6
            我.对手.连=11.4
            我.对手.暴=7.7
            我.对手.反=10.2
            #我.对手.晕=16.9       
            我.对手.设置基础属性(27110,4058,688,925)
            我.对手.主灵兽名称="灵狐"
            我.对手.主灵兽伤倍率_乘在攻=0.76
            我.对手.主灵兽出手频率=3
            我.对手.强灵=0.004
            
            
    def 帮助是否换装备之决策(n):
        nonlocal 我
        我.吸+=(-3.8,0)[n]
        我.暴+=(-2.5,0)[n]
        我.连+=(-1.3,0)[n-1]
        我.血+=(300)+3000
        我.攻+=(2,0)[n]+500
        我.防+=(1,0)[n]+70
        
    敌黑麒麟=28
    我梼杌_连反=(0,20)[0]
    我魔礼青_反=(str(),"魔礼青")[1]
    
    
    双方信息设置("斗法")    
    我.设置战斗抗性(14)
    我.抗吸=18.7
    我.吸=0
    我.连=25.8-敌黑麒麟+我梼杌_连反
    我.暴=14.1-敌黑麒麟
    我.反=14.6+我梼杌_连反
    我.增伤=0.004
    我.携带精怪=[我魔礼青_反]
    
    
    
    #帮助是否换装备之决策(1)
    
    
    可选主灵兽={"属性提升":{"灵狐":0.05, "天马":0.09,"鸾鸟":0.12},
        "出手频率":{"灵狐":3, "天马":3, "鸾鸟":2},
        "伤倍率_乘在攻":{"灵狐":0.6, "天马":eval(f"{0.9:g}")},
        "治疗倍率_乘在攻":{"鸾鸟":0.85},
        }    
    
    
    # 会根据主灵兽的情况去转换到其他灵兽相同灵果消耗的情况
    # 已支持转换到相同灵果的：等级、属性提升、参战技能倍率
    可选主灵兽=使所有灵兽升级到消耗相同灵果(29,"鸾鸟",可选主灵兽)
    input(f"{可选主灵兽}\n😋\n")
    
    是否改属性提升 = True
    
    # 下阵灵兽
    下阵灵兽(我, 可选主灵兽, 是否改属性提升)
    
    # 上阵灵兽
    我.主灵兽名称=("灵狐","天马","鸾鸟")[-1]
    #可选主灵兽["属性提升"][我.主灵兽名称]=0.162    
    上阵灵兽(我, 可选主灵兽, 是否改属性提升)
    
    # --- O N / O F F
    # 主灵兽的参战技能和效果的开关
    #我.主灵兽名称=""
    
    # --- O N / O F F
    # 对是否支持buff功能的开关（默认开。用去注释来关。）
    #我.buff_ON=False
    
    # 是否使用对手模板？
    #战场=冒险怪3_5()   

    
    # --- 双方初始信息已设置好了 ---
    # --- 开 始 进 入 战 斗
    战场.展示双方战前面板信息()
    战场.模糊战况报告()
    战场.进行选手存档()
    战场.第一场()
    战场.记者重新入场()
    while True:
        if 战场.再来多少场()=="quit":break

    

 
if __name__=="__main__":run()

# 2025.1.18
# 《重写》v0.1.0

# 2025.1.23
# 《寻道大千：从为了专用于新号无灵兽阶段开始写的战况报告》v0.1.1

# updated:2025.1.23 13:58
# 基本测试通过，达到第一个可用版本，结束了初步开发的阶段
# 《寻道大千：从为了专用于新号无灵兽阶段开始写的战况报告》v1.0.0

# updated:2025.1.23 17:33
# v1.1.0-alpha
# 开始加入灵兽

# updated:2025.1.23 18:30
# 初步测试通过了
# 升级到v1.1.0-beta
# note:2025.1.23 18:45
# 精准测试度过冒险怪3-5至3-6两个关卡


# updated:2025.1.25
# v1.2.0-beta.1
# 用10回合连暴3相较于8回合连暴5、5回合连暴5的优势精准度过冒险怪3-7-1
