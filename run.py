import os,sys

here=__file__
for _ in range(1):
    here=os.path.dirname(here)
sys.path.append(
os.sep.join((here,"modules"))
)
del os,sys

import math
from Role import Role
from Fight import Fight
from 对手模板 import *
from 转换器about灵兽信息 import Convert
from 穿换任意两件来计算基值 import Beast, Equip


def 找到面板基值(attr):
    temp=dict(zip("血攻防",range(3)))
    #面板_鸾鸟=(19469,3004,479)
    #面板_天马=(18176,2809,446)
    
    #面板_鸾鸟=(20962,3205,514)
    #面板_天马=(19570,2996,479)
    
    #先=Beast("鸾鸟",0.17)    
    #后=Beast("天马",0.09)
    
    面板_鸾鸟=(23629,3596,582)
    面板_天马=(21665,3303,533)
    
    先=Beast("鸾鸟",0.192)    
    后=Beast("天马",0.09)
    equip=Equip((先, 后))


    先.be_worn(面板_鸾鸟[temp[attr]])
    后.be_worn(面板_天马[temp[attr]])
    equip.to_be_taken_off()
    
    return equip.基值, equip.剩余全部属性提升_先
    
    
# 我.灵兽.下阵()
# 我.灵兽.上阵()
def 下阵灵兽(我, 可选主灵兽, 改属性提升吗):
    if not 我.主灵兽名称:return 
    if 改属性提升吗:
        收集 = []
        for attr in "血攻防":
            收集.append(找到面板基值(attr))
        input(f"{收集}\n😋\n")
        
        面板 = 我.获取基本属性()[:-1]
        新面板 = []        
        improve = 可选主灵兽["属性提升"][我.主灵兽名称]
        for i in range(3):
            该项基础属性的基值 = 收集[i][0]
            削弱值 = 该项基础属性的基值 * improve
            新面板.append( 面板[i] - 削弱值 )
       
        我.血, 我.攻, 我.防 = 新面板
        #input(新面板)
    我.主灵兽名称=""

    
def 上阵灵兽(我, 可选主灵兽, 改属性提升吗):
    if not 我.主灵兽名称:return 
    if 改属性提升吗:
        收集 = []
        for attr in "血攻防":
            收集.append(找到面板基值(attr))
        
        面板 = 我.获取基本属性()[:-1]
        新面板 = []
        improve = 可选主灵兽["属性提升"][我.主灵兽名称]
        for i in range(3):
            该项基础属性的基值 = 收集[i][0]
            加强值 = 该项基础属性的基值 * improve
            新面板.append( 面板[i] + 加强值 )
   
        我.血, 我.攻, 我.防 = 新面板
        #input(新面板)

    我.主灵兽出手频率=可选主灵兽["出手频率"][我.主灵兽名称]
    try:
        我.主灵兽伤倍率_乘在攻=可选主灵兽["伤倍率_乘在攻"][我.主灵兽名称]
    except KeyError:pass
    try: 
        我.主灵兽治疗倍率_乘在攻=可选主灵兽["治疗倍率_乘在攻"][我.主灵兽名称]
    except KeyError:pass
    


def 使所有灵兽升级到消耗相同灵果(level, name,可选主灵兽, only_first_one=False):    
    convert=Convert(level, name)
    可选主灵兽=convert.copy(可选主灵兽)
    
    #convert.show()
    
    if only_first_one:return 可选主灵兽
    
    其他所有灵兽=[pending_name for pending_name in 可选主灵兽["属性提升"] if not pending_name==name]
    其他所有灵兽对应等级库=dict()
    
    for targer_name in 其他所有灵兽:
        convert.设置要转换到的灵兽叫什么名称(targer_name)
        其他所有灵兽对应等级库[targer_name]=int(convert.获取等级(targer_name))
       
    for pending_name,pending_level in 其他所有灵兽对应等级库.items():
        convert.__init__(pending_level, pending_name)
        #convert.show()
        #input()
        可选主灵兽=convert.copy(可选主灵兽)
    
    #input(可选主灵兽)
    return 可选主灵兽


#--- 入口 ---

def run():
    我=Role([23629,3596,582,792],"我")
    敌=Role([57760,2505,833,757],"敌")
    # 30级鸾鸟
    我.主灵兽名称=("鸾鸟","天马")[0]   
    战场=Fight(我,敌)       
    我.现阶段=我.对手.现阶段="金丹"
    
    def 双方信息设置(对手类型="冒险怪"):
        nonlocal 我
        if 对手类型=="冒险怪":           
            我.对手.设置战斗抗性(8.7)
            我.对手.设置战斗属性(4.3,"吸",13.1)
            我.对手.主灵兽名称="封豨"
            我.对手.主灵兽伤倍率_乘在攻=0.9
            我.对手.主灵兽出手频率=4
        elif 对手类型=="斗法":            
            我.对手.设置战斗抗性(1,"抗反",6.5)
            我.对手.吸=6.2
            我.对手.连=7.9
            我.对手.暴=0
            我.对手.反=5.4 
            我.对手.设置基础属性(27124,4138,677,967)
            我.对手.主灵兽名称="帝江"
            我.对手.主灵兽伤倍率_乘在攻=1.035
            我.对手.主灵兽出手频率=3
            我.对手.强灵=0/100
            我.对手.弱灵=0/100
            我.对手.携带精怪=[]
            
            
    def 帮助是否换装备之决策(n):
        nonlocal 我
        我.吸+=(-3.8,0)[n]
        我.暴+=(-2.5,0)[n]
        我.连+=(-1.3,0)[n-1]
        我.血+=(300)+3000
        我.攻+=(2,0)[n]+500
        我.防+=(1,0)[n]+70
        
    
    双方信息设置()
    我.设置战斗抗性(14)
    我.抗吸=18.7
    我.吸=0
    我.连=27.4
    我.暴=11.4
    我.反=14
    我.增伤=0.4/100
    我.携带精怪=[("梼杌","魔礼青","干饭人","")[1]]
    
        
    #帮助是否换装备之决策(1)
    
    
    可选主灵兽={"属性提升":{"灵狐":0.05, "天马":0.09, "鸾鸟":0.12, "玄武":0.15, "应龙":0.12},
        "出手频率":{"灵狐":3, "天马":3, "鸾鸟":2, "玄武":2, "应龙":5},
        "伤倍率_乘在攻":{"灵狐":0.6, "天马":0.9, "应龙":3.5},
        "治疗倍率_乘在攻":{"鸾鸟":0.85, "玄武":1.1},
        }    
    
    
    # 会根据主灵兽的情况去转换到其他灵兽相同灵果消耗的情况
    # 已支持转换到相同灵果的：等级、属性提升、参战技能倍率
    可选主灵兽=使所有灵兽升级到消耗相同灵果(30,"鸾鸟",可选主灵兽)
    input(f"{可选主灵兽}\n😋\n")
    
    是否改属性提升 = True
    
    # 下阵灵兽
    下阵灵兽(我, 可选主灵兽, 是否改属性提升)
    
    # 上阵灵兽
    我.主灵兽名称=("灵狐","天马","鸾鸟","玄武","应龙")[1]
    #可选主灵兽["属性提升"][我.主灵兽名称]=0.162    
    上阵灵兽(我, 可选主灵兽, 是否改属性提升)
    
    # --- O N / O F F
    # 主灵兽的参战技能和效果的开关
    #我.主灵兽名称=""
    
    # --- O N / O F F
    # 对是否支持buff功能的开关（默认开。用去注释来关。）
    #我.buff_ON=False
    
    # 是否使用对手模板？
    #战场=冒险怪3_5()   

    
    # --- 双方初始信息已设置好了 ---
    # --- 开 始 进 入 战 斗 ---
    我.对手.时刻=我.时刻="本场开始"
    战场.展示双方战前面板信息()
    战场.模糊战况报告()
    战场.第一场()
    战场.记者重新入场()
    while True:
        if 战场.再来多少场()=="quit":break

    

 
if __name__=="__main__":run()

# 2025.1.18
# 《重写》v0.1.0

# 2025.1.23
# 《寻道大千：从为了专用于新号无灵兽阶段开始写的战况报告》v0.1.1

# updated:2025.1.23 13:58
# 基本测试通过，达到第一个可用版本，结束了初步开发的阶段
# 《寻道大千：从为了专用于新号无灵兽阶段开始写的战况报告》v1.0.0

# updated:2025.1.23 17:33
# v1.1.0-alpha
# 开始加入灵兽

# updated:2025.1.23 18:30
# 初步测试通过了
# 升级到v1.1.0-beta
# note:2025.1.23 18:45
# 精准测试度过冒险怪3-5至3-6两个关卡


# updated:2025.1.25
# v1.2.0-beta.1
# 用10回合连暴3相较于8回合连暴5、5回合连暴5的优势精准度过冒险怪3-7-1
